import React from "react";
import sentimentformula from "./sentimentformula.png"

const ApplicationDescription = () => {
  return (
    <div className="description-container" data-testid="description-container">
      <h4>Welcome to James</h4>
      <p>
        James is a tool for research in the Digital Humanities that combines LDA topic modelling and sentiment analysis to analyze attitudes towards topics present in text. 
        You can process a single document to analyze the topics present within, and the attitudes towards those topics. 
        You can also process multiple documents together in order to understand the way the attitudes towards the same topics differ between texts.
      </p>
      <h4>How to Use James</h4>
      <ol>
        <li>Click on the upload button to select the text(s) you would like to analyze. You can select one or more documents, but they must all be text (.txt) files. Please note that you can't upload your files one at a time; they must all be uploaded at once.</li>
        <li>Enter the number of topics you would like the model to generate for your uploaded text(s). This must be a number between 1 and 100.</li>
        <li>Use the dropdown list to select the dataset you would like to use for the sentiment analysis model.</li>
        <li>Click Calculate! It may take several minutes for James to process your results, especially if you uploaded a large volume of text.</li>
      </ol>
      <p>
        Please note: James was designed and trained using English text; while James will allow you to upload documents containing text in other languages, the results will certainly be unintended.
      </p>
      <h4>Understanding the Results</h4>
      <p>
        Once James has finished processing your input, you will see the results displayed on the screen. You also have the option to download your results as a .csv file using the 'Download Results' button at the very top of the page.<br /><br />
        At the top of the Topics section of the results, you'll see the coherence score for the topic model as a whole. <br />
        Below this is the list of topics generated by the topic model for your input text. Each of these topics will be numbered for identification. Immediately below the topic number, you'll find a button that allows you to hide or show each topic from the results. Below that, you'll find the coherence score for that topic.<br />
        For each topic, the results contain two things that will help you understand the topic's meaning: words and example sentences. <br /> 
        First, you'll see a collection of the top words that the topic model has identified as belonging to this topic. The topic model actually uses word stems to generate each topic, but to make the results easier to understand, we provide both an example of a word from the text that produced each stem along with the stem itself. Each word is also given a weight, which represents how important that word is for the given topic.<br />
        Finally, each topic will have up to 3 example sentences from your input text that had the highest weight towards that topic, along with that weight.<br /><br />
        After the topic model results comes the document analysis. Here, you'll see a list of documents, and for each document a list of topics. For each topic, the list will show the topic number, that topic's weight in the given document, and the document's sentiment towards that topic.<br /> <br />
        Please note: Once you leave this page, your results will be lost. Be sure to download your results if you want to refer to them later!
      </p>
      <h4>How It Works</h4>
      <p>
        James uses <a href="https://en.wikipedia.org/wiki/Latent_Dirichlet_allocation">Latent Dirichlet Allocation</a> for topic modelling.<br />
        Specifically, the <a href="http://mallet.cs.umass.edu/">MALLET</a> implementation of LDA.<br />
        The Topic Model Coherence score, as well as the individual coherence scores for each topic, are c_v coherence scores calculated using gensim's <a href="https://radimrehurek.com/gensim/models/coherencemodel.html">coherencemodel</a>.<br /><br />
        TODO Something about sentiment analysis<br /><br />
        For each topic in each document, the sentiment towards that topic is calculated using the following formula:
      </p>
      <img className="sentiment-formula" src={sentimentformula} alt="sentiment formula" />
      <p>
        Where t(sentence) is the topic weight of the sentence towards the given topic, given by the topic model, and s(sentence) is the sentiment of the sentence, given by the sentiment analysis model.<br /><br />
        TODO Maybe more here?<br /><br />
        James is an Open Source project hosted on <a href="https://github.com/myrithok/James">github</a>. Detailed information about the project's design and requirements can be found on the <a href="https://github.com/myrithok/James/wiki">wiki</a> there.
      </p>
      <h4>Who We Are</h4>
      <p>
        James was developed by Andrew Mitchell, Esam Haris, Indika Wijesundera, Robert Vardy, and Samuel Alderson for Dr. Alexander Klein as their Computer Science Capstone Project at McMaster University.
      </p>
      <h4>Help Us Improve</h4>
      <p>
        If you would like to report a software bug, make a suggestion on how we can improve the app, or have any other requests, feel free to create an issue on the James <a href="https://github.com/myrithok/James/issues">github</a>.
      </p>
      <h4>Acknowledgements</h4>
      <p>
        McCallum, Andrew Kachites. "MALLET: A Machine Learning for Language Toolkit. "http://mallet.cs.umass.edu. 2002.
      </p>
    </div>
  );
};

export default ApplicationDescription;
